{"ast":null,"code":"/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { DEFAULT_INTL_CONFIG, createFormatters, invariantIntlContext, createIntlCache } from '../utils';\nimport { formatNumber, formatNumberToParts } from '../formatters/number';\nimport { formatRelativeTime } from '../formatters/relativeTime';\nimport { formatDate, formatTime, formatDateToParts, formatTimeToParts } from '../formatters/dateTime';\nimport { formatPlural } from '../formatters/plural';\nimport { formatMessage } from '../formatters/message';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nimport { formatList } from '../formatters/list';\nimport { formatDisplayName } from '../formatters/displayName';\nimport { InvalidConfigError, MissingDataError } from '../error';\nvar shallowEquals = shallowEquals_.default || shallowEquals_;\n\nfunction processIntlConfig(config) {\n  return {\n    locale: config.locale,\n    timeZone: config.timeZone,\n    formats: config.formats,\n    textComponent: config.textComponent,\n    messages: config.messages,\n    defaultLocale: config.defaultLocale,\n    defaultFormats: config.defaultFormats,\n    onError: config.onError,\n    wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment\n  };\n}\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\n\n\nexport function createIntl(config, cache) {\n  var formatters = createFormatters(cache);\n\n  var resolvedConfig = __assign(__assign({}, DEFAULT_INTL_CONFIG), config);\n\n  var locale = resolvedConfig.locale,\n      defaultLocale = resolvedConfig.defaultLocale,\n      onError = resolvedConfig.onError;\n\n  if (!locale) {\n    if (onError) {\n      onError(new InvalidConfigError(\"\\\"locale\\\" was not configured, using \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details\"));\n    } // Since there's no registered locale data for `locale`, this will\n    // fallback to the `defaultLocale` to make sure things can render.\n    // The `messages` are overridden to the `defaultProps` empty object\n    // to maintain referential equality across re-renders. It's assumed\n    // each <FormattedMessage> contains a `defaultMessage` prop.\n\n\n    resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\n  } else if (!Intl.NumberFormat.supportedLocalesOf(locale).length && onError) {\n    onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.NumberFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n  } else if (!Intl.DateTimeFormat.supportedLocalesOf(locale).length && onError) {\n    onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.DateTimeFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n  }\n\n  return __assign(__assign({}, resolvedConfig), {\n    formatters: formatters,\n    formatNumber: formatNumber.bind(null, resolvedConfig, formatters.getNumberFormat),\n    formatNumberToParts: formatNumberToParts.bind(null, resolvedConfig, formatters.getNumberFormat),\n    formatRelativeTime: formatRelativeTime.bind(null, resolvedConfig, formatters.getRelativeTimeFormat),\n    formatDate: formatDate.bind(null, resolvedConfig, formatters.getDateTimeFormat),\n    formatDateToParts: formatDateToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat),\n    formatTime: formatTime.bind(null, resolvedConfig, formatters.getDateTimeFormat),\n    formatTimeToParts: formatTimeToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat),\n    formatPlural: formatPlural.bind(null, resolvedConfig, formatters.getPluralRules),\n    formatMessage: formatMessage.bind(null, resolvedConfig, formatters),\n    formatList: formatList.bind(null, resolvedConfig, formatters.getListFormat),\n    formatDisplayName: formatDisplayName.bind(null, resolvedConfig, formatters.getDisplayNames)\n  });\n}\n\nvar IntlProvider =\n/** @class */\nfunction (_super) {\n  __extends(IntlProvider, _super);\n\n  function IntlProvider() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.cache = createIntlCache();\n    _this.state = {\n      cache: _this.cache,\n      intl: createIntl(processIntlConfig(_this.props), _this.cache),\n      prevConfig: processIntlConfig(_this.props)\n    };\n    return _this;\n  }\n\n  IntlProvider.getDerivedStateFromProps = function (props, _a) {\n    var prevConfig = _a.prevConfig,\n        cache = _a.cache;\n    var config = processIntlConfig(props);\n\n    if (!shallowEquals(prevConfig, config)) {\n      return {\n        intl: createIntl(config, cache),\n        prevConfig: config\n      };\n    }\n\n    return null;\n  };\n\n  IntlProvider.prototype.render = function () {\n    invariantIntlContext(this.state.intl);\n    return React.createElement(Provider, {\n      value: this.state.intl\n    }, this.props.children);\n  };\n\n  IntlProvider.displayName = 'IntlProvider';\n  IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n  return IntlProvider;\n}(React.PureComponent);\n\nexport default IntlProvider;","map":{"version":3,"sources":["D:/MyDesktop/lab8/node_modules/react-intl/lib/src/components/provider.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","React","Provider","DEFAULT_INTL_CONFIG","createFormatters","invariantIntlContext","createIntlCache","formatNumber","formatNumberToParts","formatRelativeTime","formatDate","formatTime","formatDateToParts","formatTimeToParts","formatPlural","formatMessage","shallowEquals_","formatList","formatDisplayName","InvalidConfigError","MissingDataError","shallowEquals","default","processIntlConfig","config","locale","timeZone","formats","textComponent","messages","defaultLocale","defaultFormats","onError","wrapRichTextChunksInFragment","createIntl","cache","formatters","resolvedConfig","Intl","NumberFormat","supportedLocalesOf","DateTimeFormat","bind","getNumberFormat","getRelativeTimeFormat","getDateTimeFormat","getPluralRules","getListFormat","getDisplayNames","IntlProvider","_super","_this","state","intl","props","prevConfig","getDerivedStateFromProps","_a","render","createElement","value","children","displayName","defaultProps","PureComponent"],"mappings":"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","sourcesContent":["/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { DEFAULT_INTL_CONFIG, createFormatters, invariantIntlContext, createIntlCache, } from '../utils';\nimport { formatNumber, formatNumberToParts } from '../formatters/number';\nimport { formatRelativeTime } from '../formatters/relativeTime';\nimport { formatDate, formatTime, formatDateToParts, formatTimeToParts, } from '../formatters/dateTime';\nimport { formatPlural } from '../formatters/plural';\nimport { formatMessage } from '../formatters/message';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nimport { formatList } from '../formatters/list';\nimport { formatDisplayName } from '../formatters/displayName';\nimport { InvalidConfigError, MissingDataError } from '../error';\nvar shallowEquals = shallowEquals_.default || shallowEquals_;\nfunction processIntlConfig(config) {\n    return {\n        locale: config.locale,\n        timeZone: config.timeZone,\n        formats: config.formats,\n        textComponent: config.textComponent,\n        messages: config.messages,\n        defaultLocale: config.defaultLocale,\n        defaultFormats: config.defaultFormats,\n        onError: config.onError,\n        wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\n    };\n}\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport function createIntl(config, cache) {\n    var formatters = createFormatters(cache);\n    var resolvedConfig = __assign(__assign({}, DEFAULT_INTL_CONFIG), config);\n    var locale = resolvedConfig.locale, defaultLocale = resolvedConfig.defaultLocale, onError = resolvedConfig.onError;\n    if (!locale) {\n        if (onError) {\n            onError(new InvalidConfigError(\"\\\"locale\\\" was not configured, using \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details\"));\n        }\n        // Since there's no registered locale data for `locale`, this will\n        // fallback to the `defaultLocale` to make sure things can render.\n        // The `messages` are overridden to the `defaultProps` empty object\n        // to maintain referential equality across re-renders. It's assumed\n        // each <FormattedMessage> contains a `defaultMessage` prop.\n        resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\n    }\n    else if (!Intl.NumberFormat.supportedLocalesOf(locale).length && onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.NumberFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n    }\n    else if (!Intl.DateTimeFormat.supportedLocalesOf(locale).length &&\n        onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.DateTimeFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n    }\n    return __assign(__assign({}, resolvedConfig), { formatters: formatters, formatNumber: formatNumber.bind(null, resolvedConfig, formatters.getNumberFormat), formatNumberToParts: formatNumberToParts.bind(null, resolvedConfig, formatters.getNumberFormat), formatRelativeTime: formatRelativeTime.bind(null, resolvedConfig, formatters.getRelativeTimeFormat), formatDate: formatDate.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateToParts: formatDateToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTime: formatTime.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTimeToParts: formatTimeToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatPlural: formatPlural.bind(null, resolvedConfig, formatters.getPluralRules), formatMessage: formatMessage.bind(null, resolvedConfig, formatters), formatList: formatList.bind(null, resolvedConfig, formatters.getListFormat), formatDisplayName: formatDisplayName.bind(null, resolvedConfig, formatters.getDisplayNames) });\n}\nvar IntlProvider = /** @class */ (function (_super) {\n    __extends(IntlProvider, _super);\n    function IntlProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cache = createIntlCache();\n        _this.state = {\n            cache: _this.cache,\n            intl: createIntl(processIntlConfig(_this.props), _this.cache),\n            prevConfig: processIntlConfig(_this.props),\n        };\n        return _this;\n    }\n    IntlProvider.getDerivedStateFromProps = function (props, _a) {\n        var prevConfig = _a.prevConfig, cache = _a.cache;\n        var config = processIntlConfig(props);\n        if (!shallowEquals(prevConfig, config)) {\n            return {\n                intl: createIntl(config, cache),\n                prevConfig: config,\n            };\n        }\n        return null;\n    };\n    IntlProvider.prototype.render = function () {\n        invariantIntlContext(this.state.intl);\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\n    };\n    IntlProvider.displayName = 'IntlProvider';\n    IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n    return IntlProvider;\n}(React.PureComponent));\nexport default IntlProvider;\n"]},"metadata":{},"sourceType":"module"}